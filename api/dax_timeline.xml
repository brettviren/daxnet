<class name="dax_timeline">

  A DAX timeline holds what epochs are valid over what time intervals.

  <include filename = "../license.xml"/>


  <constructor>
    Create a DAX timeline.
  </constructor>

  <destructor>
    Destroy the DAX timeline.
  </destructor>

  <method name = "ident">
    The timeline identity number is monotonically increasing with the
    wall clock time of the timeline source.
    <return type = "integer" c_type = "int"/>
  </method>

  <method name = "created">
    The time of creation of this timeline in seconds from the Unix epoch.
    <return type = "integer" c_type = "time_t"/>
  </method>

  <method name= "sot">
    Return the starting time in the 64 bit data clock.
    <return type = "integer" c_type = "int64_t"/>
  </method>

  <method name = "size">
    Return the number of intervals.
    <return type = "integer" c_type="size_t" />
  </method>

  <method name = "epochs">
    Return an array of epoch numbers for each interval.  Caller does not own.
    <return c_type="int*" />
  </method>
  
  <method name = "times">
    Return an array of times ending each interval.  Caller does not own.
    <return c_type="int64_t*" />
  </method>
  
  <method name = "set_ident">
    Set the ident.
    <argument name = "ident" type="integer" c_type="int"/>
  </method>

  <method name = "set_created">
    Set the creation wall clock time.
    <argument name = "time" type="integer" c_type="size_t"/>
  </method>

  <method name = "set_sot">
    Set the start of timeline.
    <argument name = "time" type="integer" c_type="size_t"/>
  </method>

  <method name = "set_intervals">
    Set the interval data.
    <argument name = "size" type="integer" c_type="size_t"/>
    <argument name = "epochs" c_type="int* "/>
    <argument name = "times" c_type="int64_t* "/>
  </method>

  <method name = "encode">
    Encode the timeline to a dax_timeline_codec.
    <argument name = "codec" type = "dax_timeline_codec"/>
  </method>

  <method name = "decode" singleton = "1">
    Create a timeline from a dax_timeline_codec.
    <argument name = "codec" type = "dax_timeline_codec"/>
    <return type = "dax_timeline" fresh = "1"/>
  </method>

  <method name = "dup">
    Duplicate a timeline.
    <return type = "dax_timeline" fresh = "1" />
  </method>


  <method name = "print">
    Print the timeline to stdout
  </method>

  <method name = "test" singleton = "1">
    Self test of this class
    <argument name = "verbose" type = "boolean" />
  </method>


</class>
       
